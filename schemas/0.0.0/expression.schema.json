{
  "$id": "https://guesant.github.io/consulta-qb/schemas/0.0.0/expression.schema.json",

  "$schema": "https://json-schema.org/draft/2020-12/schema",

  "$defs": {
    "cmp_between": {
      "type": "object",

      "properties": {
        "BETWEEN": {
          "type": "object",

          "description": "Between",

          "properties": {
            "value": {
              "$ref": "#/$defs/expression"
            },

            "start": {
              "$ref": "#/$defs/expression"
            },

            "end": {
              "$ref": "#/$defs/expression"
            }
          },

          "additionalProperties": false,

          "required": ["value", "start", "end"]
        }
      },

      "additionalProperties": false,

      "required": ["BETWEEN"]
    },

    "cmp_eq": {
      "type": "object",

      "properties": {
        "==": {
          "type": "array",

          "description": "Equal",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["=="]
    },

    "cmp_gt": {
      "type": "object",

      "properties": {
        ">": {
          "type": "array",
          "description": "Greater than",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": [">"]
    },

    "cmp_gte": {
      "type": "object",

      "properties": {
        ">=": {
          "type": "array",
          "description": "Greater than or equal",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": [">="]
    },

    "cmp_in": {
      "type": "object",

      "properties": {
        "IN": {
          "type": "object",

          "description": "In",

          "properties": {
            "value": {
              "$ref": "#/$defs/expression"
            },

            "items": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/expression"
              }
            }
          },

          "additionalProperties": false,

          "required": ["value", "items"]
        }
      },

      "additionalProperties": false,

      "required": ["IN"]
    },

    "cmp_is_not_null": {
      "type": "object",

      "properties": {
        "IS NOT NULL": {
          "description": "Is not null",

          "$ref": "#/$defs/expression"
        }
      },

      "additionalProperties": false,

      "required": ["IS NOT NULL"]
    },

    "cmp_is_null": {
      "type": "object",

      "properties": {
        "IS NULL": {
          "description": "Is null",
          "$ref": "#/$defs/expression"
        }
      },

      "additionalProperties": false,

      "required": ["IS NULL"]
    },

    "cmp_like": {
      "type": "object",

      "properties": {
        "LIKE": {
          "type": "object",

          "description": "Like",

          "properties": {
            "value": {
              "$ref": "#/$defs/expression"
            },

            "pattern": {
              "$ref": "#/$defs/literal"
            }
          },

          "additionalProperties": false,

          "required": ["value", "pattern"]
        }
      },

      "additionalProperties": false,

      "required": ["LIKE"]
    },

    "cmp_lt": {
      "type": "object",

      "properties": {
        "<": {
          "type": "array",

          "description": "Less than",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["<"]
    },

    "cmp_lte": {
      "type": "object",

      "properties": {
        "<=": {
          "type": "array",
          "description": "Less than or equal",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["<="]
    },

    "cmp_neq": {
      "type": "object",

      "properties": {
        "!=": {
          "type": "array",

          "description": "Not equal",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["!="]
    },

    "literal": {
      "type": "object",

      "properties": {
        "literal": {
          "description": "Literal value",

          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        }
      },

      "additionalProperties": false,

      "required": ["literal"]
    },

    "op_and": {
      "type": "object",

      "properties": {
        "AND": {
          "type": "array",

          "description": "Binary AND",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["AND"]
    },

    "op_not": {
      "type": "object",

      "properties": {
        "NOT": {
          "description": "Binary NOT",
          "$ref": "#/$defs/expression"
        }
      },

      "additionalProperties": false,

      "required": ["NOT"]
    },

    "op_or": {
      "type": "object",

      "properties": {
        "OR": {
          "type": "array",

          "description": "Binary OR",

          "items": {
            "$ref": "#/$defs/expression"
          },

          "minItems": 2,
          "maxItems": 2
        }
      },

      "additionalProperties": false,

      "required": ["OR"]
    },

    "param": {
      "type": "object",

      "properties": {
        "param": {
          "type": "object",

          "description": "Parameter",

          "properties": {
            "name": {
              "type": "string"
            }
          },

          "required": ["name"]
        }
      },

      "additionalProperties": false,

      "required": ["param"]
    },

    "symbol": {
      "type": "object",

      "properties": {
        "symbol": {
          "type": "string",
          "description": "Symbol",
          "enum": ["*"]
        }
      },

      "additionalProperties": false,

      "required": ["symbol"]
    },

    "value": {
      "description": "Value",

      "oneOf": [
        {
          "$ref": "#/$defs/column"
        },
        {
          "$ref": "#/$defs/symbol"
        },
        {
          "$ref": "#/$defs/literal"
        },
        {
          "$ref": "#/$defs/param"
        }
      ]
    },

    "column": {
      "type": "object",

      "properties": {
        "column": {
          "type": "object",

          "description": "Value of a select column.",

          "properties": {
            "table": {
              "$ref": "https://guesant.github.io/consulta-qb/schemas/0.0.0/constraints.schema.json#/$defs/table_name"
            },

            "name": {
              "$ref": "https://guesant.github.io/consulta-qb/schemas/0.0.0/constraints.schema.json#/$defs/column_name"
            }
          },

          "required": ["name"]
        }
      },

      "additionalProperties": false,

      "required": ["column"]
    },

    "expression": {
      "description": "Expression",

      "oneOf": [
        {
          "$ref": "#/$defs/op_and"
        },
        {
          "$ref": "#/$defs/op_or"
        },
        {
          "$ref": "#/$defs/op_not"
        },
        {
          "$ref": "#/$defs/cmp_eq"
        },
        {
          "$ref": "#/$defs/cmp_neq"
        },
        {
          "$ref": "#/$defs/cmp_lt"
        },
        {
          "$ref": "#/$defs/cmp_lte"
        },
        {
          "$ref": "#/$defs/cmp_gt"
        },
        {
          "$ref": "#/$defs/cmp_gte"
        },
        {
          "$ref": "#/$defs/cmp_between"
        },
        {
          "$ref": "#/$defs/cmp_like"
        },
        {
          "$ref": "#/$defs/cmp_in"
        },
        {
          "$ref": "#/$defs/cmp_is_null"
        },
        {
          "$ref": "#/$defs/cmp_is_not_null"
        },
        {
          "$ref": "#/$defs/value"
        }
      ]
    }
  }
}
