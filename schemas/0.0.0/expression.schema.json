{
  "$id": "https://guesant.github.io/consulta-qb/schemas/0.0.0/expression.schema.json",

  "$schema": "https://json-schema.org/draft/2020-12/schema",

  "$defs": {
    "cmp_between": {
      "type": "object",

      "description": "Between",

      "properties": {
        "type": {
          "type": "string",
          "enum": ["cmp_between"],
          "default": "cmp_between"
        },

        "value": {
          "$ref": "#/$defs/ref_expression"
        },

        "start": {
          "$ref": "#/$defs/ref_expression"
        },

        "end": {
          "$ref": "#/$defs/ref_expression"
        }
      },


      "required": ["value", "start", "end"]
    },

    "ref_cmp_between": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_between"],
              "default": "cmp_between"
            },
            "BETWEEN": {
              "$ref": "#/$defs/cmp_between"
            }
          },


          "required": ["BETWEEN"]
        }
      ]
    },

    "cmp_eq": {
      "type": "array",

      "description": "Equal",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_eq": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_eq"],
              "default": "cmp_eq"
            },
            "==": {
              "$ref": "#/$defs/cmp_eq"
            }
          },


          "required": ["=="]
        }
      ]
    },

    "cmp_gt": {
      "type": "array",
      "description": "Greater than",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_gt": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_gt"],
              "default": "cmp_gt"
            },
            ">": {
              "$ref": "#/$defs/cmp_gt"
            }
          },


          "required": [">"]
        }
      ]
    },

    "cmp_gte": {
      "type": "array",
      "description": "Greater than or equal",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_gte": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_gte"],
              "default": "cmp_gte"
            },
            ">=": {
              "$ref": "#/$defs/cmp_gte"
            }
          },


          "required": [">="]
        }
      ]
    },

    "cmp_in": {
      "type": "object",

      "description": "In",

      "properties": {
        "type": {
          "type": "string",
          "enum": ["cmp_in"],
          "default": "cmp_in"
        },

        "value": {
          "$ref": "#/$defs/ref_expression"
        },

        "items": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ref_expression"
          }
        }
      },

      "additionalProperties": false
    },

    "ref_cmp_in": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_in"],
              "default": "cmp_in"
            },

            "IN": {
              "$ref": "#/$defs/cmp_in"
            }
          },


          "required": ["IN"]
        }
      ]
    },

    "cmp_is_not_null": {
      "description": "Is not null",

      "$ref": "#/$defs/ref_expression"
    },

    "ref_cmp_is_not_null": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_is_not_null"],
              "default": "cmp_is_not_null"
            },

            "IS NOT NULL": {
              "$ref": "#/$defs/cmp_is_not_null"
            }
          },


          "required": ["IS NOT NULL"]
        }
      ]
    },

    "cmp_is_null": {
      "description": "Is null",
      "$ref": "#/$defs/ref_expression"
    },

    "ref_cmp_is_null": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_is_null"],
              "default": "cmp_is_null"
            },
            "IS NULL": {
              "$ref": "#/$defs/cmp_is_null"
            }
          },


          "required": ["IS NULL"]
        }
      ]
    },

    "cmp_lt": {
      "type": "array",

      "description": "Less than",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_lt": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_lt"],
              "default": "cmp_lt"
            },
            "<": {
              "$ref": "#/$defs/cmp_lt"
            }
          },


          "required": ["<"]
        }
      ]
    },

    "cmp_lte": {
      "type": "array",
      "description": "Less than or equal",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_lte": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_lte"],
              "default": "cmp_lte"
            },
            "<=": {
              "$ref": "#/$defs/cmp_lte"
            }
          },


          "required": ["<="]
        }
      ]
    },

    "cmp_like": {
      "type": "object",

      "description": "Like",

      "properties": {
        "type": {
          "type": "string",
          "enum": ["cmp_like"],
          "default": "cmp_like"
        },

        "value": {
          "$ref": "#/$defs/ref_expression"
        },

        "pattern": {
          "$ref": "#/$defs/ref_literal"
        }
      },

      "additionalProperties": false
    },

    "ref_cmp_like": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_like"],
              "default": "cmp_like"
            },
            "LIKE": {
              "$ref": "#/$defs/cmp_like"
            }
          },


          "required": ["LIKE"]
        }
      ]
    },

    "cmp_neq": {
      "type": "array",

      "description": "Not equal",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2,
      "maxItems": 2
    },

    "ref_cmp_neq": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_neq"],
              "default": "cmp_neq"
            },
            "!=": {
              "$ref": "#/$defs/cmp_neq"
            }
          },


          "required": ["!="]
        },

        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["cmp_neq"],
              "default": "cmp_neq"
            },
            "<>": {
              "$ref": "#/$defs/cmp_neq"
            }
          },


          "required": ["<>"]
        }
      ]
    },

    "literal": {
      "description": "Literal value",

      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        },
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },

    "ref_literal": {
      "type": "object",

      "properties": {
        "ref": {
          "type": "string",
          "enum": ["literal"],
          "default": "literal"
        },

        "literal": {
          "$ref": "#/$defs/literal"
        }
      },


      "required": ["literal"]
    },

    "op_and": {
      "type": "array",

      "description": "Binary AND",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2
    },

    "ref_op_and": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_and"],
              "default": "op_and"
            },
            "AND": {
              "$ref": "#/$defs/op_and"
            }
          },


          "required": ["AND"]
        },
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_and"],
              "default": "op_and"
            },
            "&&": {
              "$ref": "#/$defs/op_and"
            }
          },


          "required": ["&&"]
        }
      ]
    },

    "op_not": {
      "description": "Binary NOT",
      "$ref": "#/$defs/ref_expression"
    },

    "ref_op_not": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_not"],
              "default": "op_not"
            },
            "NOT": {
              "$ref": "#/$defs/op_not"
            }
          },


          "required": ["NOT"]
        },
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_not"],
              "default": "op_not"
            },
            "!": {
              "$ref": "#/$defs/op_not"
            }
          },


          "required": ["!"]
        }
      ]
    },

    "op_or": {
      "type": "array",

      "description": "Binary OR",

      "items": {
        "$ref": "#/$defs/ref_expression"
      },

      "minItems": 2
    },

    "ref_op_or": {
      "oneOf": [
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_or"],
              "default": "op_or"
            },
            "OR": {
              "$ref": "#/$defs/op_or"
            }
          },


          "required": ["OR"]
        },
        {
          "type": "object",

          "properties": {
            "ref": {
              "type": "string",
              "enum": ["op_or"],
              "default": "op_or"
            },
            "||": {
              "$ref": "#/$defs/op_or"
            }
          },


          "required": ["||"]
        }
      ]
    },

    "param": {
      "type": "object",

      "description": "Parameter",

      "properties": {
        "type": {
          "type": "string",
          "enum": ["param"],
          "default": "param"
        },
        "name": {
          "type": "string"
        }
      },


      "required": ["name"]
    },

    "ref_param": {
      "type": "object",

      "properties": {
        "ref": {
          "type": "string",
          "enum": ["param"],
          "default": "param"
        },
        "param": {
          "$ref": "#/$defs/param"
        }
      },


      "required": ["param"]
    },

    "symbol": {
      "type": "string",
      "description": "Symbol",
      "enum": ["*"]
    },

    "ref_symbol": {
      "type": "object",

      "properties": {
        "ref": {
          "type": "string",
          "enum": ["symbol"],
          "default": "symbol"
        },
        "symbol": {
          "$ref": "#/$defs/symbol"
        }
      },


      "required": ["symbol"]
    },

    "value": {
      "description": "Value",

      "oneOf": [
        {
          "$ref": "#/$defs/ref_select_column"
        },
        {
          "$ref": "#/$defs/ref_symbol"
        },
        {
          "$ref": "#/$defs/ref_literal"
        },
        {
          "$ref": "#/$defs/ref_param"
        }
      ]
    },

    "ref_value": {
      "$ref": "#/$defs/value"
    },

    "select_column": {
      "type": "object",

      "description": "Value of a select column.",

      "properties": {
        "type": {
          "type": "string",
          "enum": ["select_column"],
          "default": "select_column"
        },
        "table": {
          "$ref": "https://guesant.github.io/consulta-qb/schemas/0.0.0/constraints.schema.json#/$defs/table_name"
        },
        "name": {
          "$ref": "https://guesant.github.io/consulta-qb/schemas/0.0.0/constraints.schema.json#/$defs/column_name"
        }
      },

      "required": ["name"]
    },

    "ref_select_column": {
      "type": "object",

      "properties": {
        "ref": {
          "type": "string",
          "enum": ["select_column"],
          "default": "select_column"
        },

        "select_column": {
          "$ref": "#/$defs/select_column"
        }
      },


      "required": ["select_column"]
    },

    "expression": {
      "description": "Expression",

      "oneOf": [
        {
          "$ref": "#/$defs/ref_op_and"
        },
        {
          "$ref": "#/$defs/ref_op_or"
        },
        {
          "$ref": "#/$defs/ref_op_not"
        },
        {
          "$ref": "#/$defs/ref_cmp_eq"
        },
        {
          "$ref": "#/$defs/ref_cmp_neq"
        },
        {
          "$ref": "#/$defs/ref_cmp_lt"
        },
        {
          "$ref": "#/$defs/ref_cmp_lte"
        },
        {
          "$ref": "#/$defs/ref_cmp_gt"
        },
        {
          "$ref": "#/$defs/ref_cmp_gte"
        },
        {
          "$ref": "#/$defs/ref_cmp_between"
        },
        {
          "$ref": "#/$defs/ref_cmp_like"
        },
        {
          "$ref": "#/$defs/ref_cmp_in"
        },
        {
          "$ref": "#/$defs/ref_cmp_is_null"
        },
        {
          "$ref": "#/$defs/ref_cmp_is_not_null"
        },
        {
          "$ref": "#/$defs/ref_value"
        }
      ]
    },

    "ref_expression": {
      "$ref": "#/$defs/expression"
    }
  }
}
