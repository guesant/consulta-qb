import {
  AstGeneratorCmpBetweenHandler,
  AstGeneratorCmpEqHandler,
  AstGeneratorCmpGteHandler,
  AstGeneratorCmpGtHandler,
  AstGeneratorCmpInHandler,
  AstGeneratorCmpIsNotNullHandler,
  AstGeneratorCmpIsNullHandler,
  AstGeneratorCmpLikeHandler,
  AstGeneratorCmpLteHandler,
  AstGeneratorCmpLtHandler,
  AstGeneratorCmpNEqHandler,
  AstGeneratorColumnHandler,
  AstGeneratorLiteralHandler,
  AstGeneratorOpAndHandler,
  AstGeneratorOpNotHandler,
  AstGeneratorOpOrHandler,
  AstGeneratorParamHandler,
  AstGeneratorQuerySelectColumnVerboseHandler,
  AstGeneratorQuerySelectHandler,
  AstGeneratorSymbolHandler,
} from "./AstGeneratorNodeHandlers";
import { IAstGeneratorNodeHandler } from "./interfaces/IAstGeneratorNodeHandler";

export const getDefaultHandlers = (): IAstGeneratorNodeHandler<any, any>[] => [
  // ...
  AstGeneratorQuerySelectHandler,
  AstGeneratorQuerySelectColumnVerboseHandler,
  AstGeneratorCmpBetweenHandler,
  AstGeneratorCmpEqHandler,
  AstGeneratorCmpGtHandler,
  AstGeneratorCmpGteHandler,
  AstGeneratorCmpInHandler,
  AstGeneratorCmpIsNotNullHandler,
  AstGeneratorCmpIsNullHandler,
  AstGeneratorCmpLikeHandler,
  AstGeneratorCmpLtHandler,
  AstGeneratorCmpLteHandler,
  AstGeneratorCmpNEqHandler,
  AstGeneratorColumnHandler,
  AstGeneratorLiteralHandler,
  AstGeneratorOpAndHandler,
  AstGeneratorOpNotHandler,
  AstGeneratorOpOrHandler,
  AstGeneratorParamHandler,
  AstGeneratorSymbolHandler,
];
